version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: red_social_postgres
    environment:
      POSTGRES_DB: red_social
      POSTGRES_USER: red_social_user
      POSTGRES_PASSWORD: red_social_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - red_social_network
    restart: unless-stopped

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: red_social_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - red_social_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: red_social_backend
    environment:
      - DATABASE_URL=postgresql://red_social_user:red_social_password@postgres:5432/red_social
      - REDIS_URL=redis://redis:6379
      - DEBUG=True
      - SECRET_KEY=dev-secret-key-change-in-production
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      - postgres
      - redis
    networks:
      - red_social_network
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: red_social_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - red_social_network
    restart: unless-stopped
    command: npm run dev

  # Nginx (opcional para producci√≥n)
  nginx:
    image: nginx:alpine
    container_name: red_social_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - red_social_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  red_social_network:
    driver: bridge 